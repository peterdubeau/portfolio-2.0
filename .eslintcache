[{"/Users/pete/Documents/portfolio/portfolio-redux/src/index.js":"1","/Users/pete/Documents/portfolio/portfolio-redux/src/App.js":"2","/Users/pete/Documents/portfolio/portfolio-redux/src/reportWebVitals.js":"3","/Users/pete/Documents/portfolio/portfolio-redux/src/Components/Home/Home.jsx":"4","/Users/pete/Documents/portfolio/portfolio-redux/src/Components/ScreenFlash/ScreenFlash.jsx":"5","/Users/pete/Documents/portfolio/portfolio-redux/src/Components/Static/Static.jsx":"6"},{"size":500,"mtime":1610552618466,"results":"7","hashOfConfig":"8"},{"size":154,"mtime":1610557635121,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610552618467,"results":"10","hashOfConfig":"8"},{"size":1181,"mtime":1610566891440,"results":"11","hashOfConfig":"8"},{"size":984,"mtime":1610557822943,"results":"12","hashOfConfig":"8"},{"size":224,"mtime":1610560897902,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pieo3r",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},"/Users/pete/Documents/portfolio/portfolio-redux/src/index.js",[],"/Users/pete/Documents/portfolio/portfolio-redux/src/App.js",[],"/Users/pete/Documents/portfolio/portfolio-redux/src/reportWebVitals.js",[],"/Users/pete/Documents/portfolio/portfolio-redux/src/Components/Home/Home.jsx",["29"],"/Users/pete/Documents/portfolio/portfolio-redux/src/Components/ScreenFlash/ScreenFlash.jsx",["30"],"import React, {useState, useEffect} from 'react'\nimport './ScreenFlash.css'\n\nexport default function ScreenFlash() {\n\n  const [color, setColor] = useState({ backgroundColor: 'blue' })\n\n  //slows down the loop to allow color to be rendered\n  //guidance from https://flaviocopes.com/how-to-slow-loop-javascript/\n  const slow = (ms) => {\n    return new Promise(slowDown => setInterval(slowDown, ms))\n  }\n\n  const colorChange = async () => {\n    for (let i = 0; i < 10; i++) {\n      if (i % 2 === 0) {\n        await slow(750)\n        setColor({ backgroundColor: \"grey\" })\n        await slow(750)\n        setColor({ display: \"none\" })\n        i = 0\n      } else {\n        await slow(750)\n        setColor({ backgroundColor: \"blue\" })\n    }\n  }\n}\n\n\n  useEffect(() => {\n    colorChange()\n  },[])\n\n  // const gray = {\n  //   backgroundColor: \"gray\"\n  // }\n\n  // const blue = {\n  //   backgroundColor: \"blue\"\n  // }\n\n\n\n  return (\n    <div className=\"flicker\" style={color}>\n\n    </div>\n  )\n}\n\n",["31","32"],"/Users/pete/Documents/portfolio/portfolio-redux/src/Components/Static/Static.jsx",["33"],"import React from 'react'\nimport Fuzz from '../../Static.gif'\nimport './Static.css'\n\nexport default function Static() {\n  return (<>\n    <p className='aux'>Aux\n    \n    </p>\n    <img className=\"static\" src={Fuzz}/>\n  </>)\n}\n",{"ruleId":"34","severity":1,"message":"35","line":16,"column":9,"nodeType":"36","messageId":"37","endLine":16,"endColumn":20},{"ruleId":"38","severity":1,"message":"39","line":32,"column":5,"nodeType":"40","endLine":32,"endColumn":7,"suggestions":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":5,"nodeType":"48","endLine":10,"endColumn":41},"no-unused-vars","'handleReset' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'colorChange'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"52","fix":"53"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [colorChange]",{"range":"54","text":"55"},[785,787],"[colorChange]"]